Para quem precisa instalar vagrant

sudo apt install virtualbox
wget https://releases.hashicorp.com/vagrant/2.2.19/vagrant_2.2.19_x86_64.deb


sudo apt install ./vagrant_2.2.19_x86_64.deb
-------------------------------
Para quem precisa instalar no windows
https://community.chocolatey.org/packages/vagrant#individual	

é possível instalar o cluster de k8s com chocalety direto no windows tbm.

vagrant para equalizarmos SO, senão quiser, instale a distro o kind usando o chocolatey, segue abaixo:

On Windows via Chocolatey (https://chocolatey.org/packages/kind)

choco install kind


------------
#instalando kind

https://kind.sigs.k8s.io/docs/user/quick-start/


On macOS via Homebrew:

brew install kind

windows 	
choco install kind

linux:
curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.18.0/kind-linux-amd64
chmod +x ./kind
sudo mv ./kind /usr/local/bin/kind
-------------------------------------
#create cluster usando kind
kind create cluster --name labx2
# criando namespaces
kubectl create ns zabbix app
## install helm
 curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
 chmod 700 get_helm.sh
 ./get_helm.sh
https://helm.sh/docs/intro/install/
## 
#install zabbix helm
helm upgrade --install zabbix zabbix-community/zabbix  -f zabbix_values.yaml



# instalar pelo binario
#https://devopscube.com/install-configure-helm-kubernetes/
##
#Subindo app
kubectl create -f appexample.yaml

#port-forward
kubectl port-forward service/zabbix-zabbix-web 8888:80 

Access Zabbix:

URL: http://localhost:8888
Login: Admin
Password: zabbix



Adicione um host no Zabbix:

a. Faça login no painel de controle do Zabbix.
b. Vá para "Configuration" > "Hosts" > "Create host".
c. Preencha os campos "Host name" e "Visible name" com o nome da aplicação Httpbin.
d. No campo "Groups", adicione o host a um grupo apropriado ou crie um novo grupo, como "Kubernetes Applications".
e. Na aba "Interfaces", adicione a interface de IP e porta do serviço Httpbin no Kubernetes.
f. Clique em "Add" para adicionar o host.

Crie um item de monitoramento:

a. No painel de controle do Zabbix, vá para "Configuration" > "Hosts" e clique no host Httpbin recém-criado.
b. Vá para a aba "Items" e clique em "Create item".
c. No campo "Name", insira um nome para o item, como "Httpbin_status_check".
d. Selecione "Type" como "Web monitoring" > "HTTP agent".
e. No campo "Key", insira uma chave exclusiva para identificar o item, como "httpbin.status.check".
f. No campo "URL", insira o URL do endpoint da aplicação Httpbin que você deseja monitorar (por exemplo, "http://<httpbin_service_ip>:<httpbin_service_port>/status/200").
g. Defina o "Update interval" de acordo com a frequência desejada para verificar o status da aplicação.
h. Clique em "Add" para adicionar o item.

Crie uma trigger para alertas (revisado):

a. No painel de controle do Zabbix, vá para "Configuration" > "Hosts" e clique no host Httpbin.
b. Vá para a aba "Triggers" e clique em "Create trigger".
c. No campo "Name", insira um nome para a trigger, como "Httpbin_status_alert".
d. No campo "Expression", clique no botão "Add" no canto inferior direito.
e. Selecione o host Httpbin na lista suspensa "Host".
f. Selecione o item "Httpbin_status_check" na lista suspensa "Item".
g. Escolha a função "last()" na lista suspensa "Function".
h. No campo "Result", insira "=0".
i. Clique em "Insert" para adicionar a expressão.
j. Ajuste a "Severity" de acordo com a importância do alerta (por exemplo, "High" ou "Average").
k. Clique em "Add" para adicionar a trigger.


Simulação de alerta:

Para simular um alerta, você pode alterar temporariamente o endpoint da aplicação Httpbin que está sendo monitorado ou interromper o serviço Httpbin.

a. Edite o item de monitoramento criado anteriormente e altere o URL para um endpoint inexistente ou com erro, como "http://<httpbin_service_ip>:<httpbin_service_port>/status/500".
b. Aguarde o intervalo de atualização do item e verifique se a trigger foi acionada na seção "Monitoring" > "Problems" no painel de controle do Zabbix.
c. Após verificar o alerta, lembre-se de reverter o URL do item de monitoramento para o endpoint correto da aplicação Httpbin.

Agora você tem um cenário de simulação de alerta configurado no Zabbix para monitorar a aplicação Httpbin executando em seu cluster Kubernetes


Edite o item de monitoramento existente:

a. No painel de controle do Zabbix, vá para "Configuration" > "Hosts" e clique no host Httpbin.
b. Vá para a aba "Items" e clique no item "Httpbin_status_check".
c. No campo "Name", insira um nome para o item, como "Httpbin_response_time".
d. No campo "Key", insira uma chave exclusiva para identificar o item, como "httpbin.response.time".
e. No campo "Type of information", selecione "Numeric (float)".
f. Clique em "Update" para salvar as alterações.

Crie uma nova trigger para alertas:

a. No painel de controle do Zabbix, vá para "Configuration" > "Hosts" e clique no host Httpbin.
b. Vá para a aba "Triggers" e clique em "Create trigger".
c. No campo "Name", insira um nome para a trigger, como "Httpbin_slow_response_alert".
d. No campo "Expression", clique no botão "Add" no canto inferior direito.
e. Selecione o host Httpbin na lista suspensa "Host".
f. Selecione o item "Httpbin_response_time" na lista suspensa "Item".
g. Escolha a função "last()" na lista suspensa "Function".
h. No campo "Result", insira um limite de tempo de resposta, como ">0.5" (para acionar um alerta quando o tempo de resposta for superior a 0,5 segundos).
i. Clique em "Insert" para adicionar a expressão.
j. Ajuste a "Severity" de acordo com a importância do alerta (por exemplo, "High" ou "Average").
k. Clique em "Add" para adicionar a trigger.

Agora, a trigger será acionada quando o tempo de resposta da aplicação Httpbin exceder o limite definido. Verifique se a trigger é acionada em "Monitoring" > "Problems" no painel de controle do Zabbix.


kubectl scale deployment httpbin --replicas=0 -n app

