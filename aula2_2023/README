Para quem precisa instalar vagrant

sudo apt install virtualbox
wget https://releases.hashicorp.com/vagrant/2.2.19/vagrant_2.2.19_x86_64.deb


sudo apt install ./vagrant_2.2.19_x86_64.deb
-------------------------------
Para quem precisa instalar no windows
https://community.chocolatey.org/packages/vagrant#individual	

é possível instalar o cluster de k8s com chocalety direto no windows tbm.

vagrant para equalizarmos SO, senão quiser, instale a distro o kind usando o chocolatey, segue abaixo:

On Windows via Chocolatey (https://chocolatey.org/packages/kind)

choco install kind


------------
#instalando kind

https://kind.sigs.k8s.io/docs/user/quick-start/


On macOS via Homebrew:

brew install kind

windows 	
choco install kind

linux:
curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.18.0/kind-linux-amd64
chmod +x ./kind
sudo mv ./kind /usr/local/bin/kind
-------------------------------------
#create cluster usando kind
kind create cluster --name labx2
# criando namespaces
kubectl create ns zabbix app
## install helm
 curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
 chmod 700 get_helm.sh
 ./get_helm.sh
https://helm.sh/docs/intro/install/
## 
#install zabbix helm
helm repo add zabbix https://zabbix.github.io/zabbix-helm
helm repo update
helm install zabbix zabbix/zabbix --values zabbix-values.yaml
##
#Subindo app
kubectl create -f appexample.yaml

#port-forward
kubectl port-forward <NOME_DO_POD> 8080:80

O usuário e a senha padrão do Zabbix são:

Usuário: Admin
Senha: zabbix


#zabbix instruction
Configurar o Zabbix para monitorar a aplicação httpbin (continuação):

Crie um grupo de hosts, templates e hosts:
Vá para "Configuration" > "Host groups" e clique em "Create host group" para criar um novo grupo de hosts chamado, por exemplo, "Kubernetes Applications".
Vá para "Configuration" > "Templates" e clique em "Create template" para criar um novo template chamado, por exemplo, "Template Httpbin". Defina o grupo como "Templates" e clique em "Add".
Vá para "Configuration" > "Hosts" e clique em "Create host" para criar um novo host chamado, por exemplo, "Httpbin". Defina o grupo como "Kubernetes Applications" e adicione o "Template Httpbin" na seção "Templates". Em "Agent interfaces", defina o IP do serviço httpbin do Kubernetes (obtido com kubectl get svc httpbin) e clique em "Add".
Criar itens e verificar a coleta:

No host "Httpbin", vá para a guia "Items" e clique em "Create item".
Crie um item chamado "Httpbin Status", com as seguintes configurações:
Tipo: HTTP agent
URL: http://<HTTPBIN_SERVICE_IP>/status/200 (substitua <HTTPBIN_SERVICE_IP> pelo IP do serviço httpbin)
Intervalo de atualização: 1m
Tipo de informação: Texto
Clique em "Add" para salvar o item.
Verifique se os dados estão sendo coletados corretamente na guia "Latest data" do host "Httpbin".
Criar triggers:

No template "Template Httpbin", vá para a guia "Triggers" e clique em "Create trigger".
Crie uma trigger chamada "Httpbin Status Error", com as seguintes configurações:
Nome: Httpbin Status Error
Severidade: Alta
Expressão: {Httpbin:http.status.last()}<>200
Clique em "Add" para salvar a trigger.
Simular alertas:

Para simular um alerta, altere temporariamente a URL do item "Httpbin Status" para http://<HTTPBIN_SERVICE_IP>/status/500.
Após o próximo intervalo de atualização, a trigger "Httpbin Status Error" deve ser acionada e você verá o alerta na seção "Problems" do Zabbix.
Reverta a URL do item para http://<HTTPBIN_SERVICE_IP>/status/200 e o alerta será resolvido após o próximo intervalo de atualização.
Agora você tem um Zabbix configurado no Kubernetes, monitorando a aplicação httpbin e gerando alertas com base no status HTTP. Você pode adaptar essa configuração para monitorar outras aplicações e métricas, conforme necessário.
