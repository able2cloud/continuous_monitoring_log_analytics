Zabbix K8s Demo - Stack M√≠nima para Alerta

Ambiente de demonstra√ß√£o para uso em sala de aula com Zabbix rodando no Kubernetes (Kind).

üìÅ Requisitos

Docker e Kind instalados

kubectl configurado

üîπ 1. Criar cluster Kind

kind create cluster --name zabbix-demo

üîπ 2. Criar arquivos YAML

zabbix-db.yaml

apiVersion: v1
kind: Service
metadata:
  name: zabbix-db
spec:
  selector:
    app: zabbix-db
  ports:
    - port: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zabbix-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zabbix-db
  template:
    metadata:
      labels:
        app: zabbix-db
    spec:
      containers:
      - name: mariadb
        image: mariadb:latest
        env:
        - name: MYSQL_DATABASE
          value: "zabbix"
        - name: MYSQL_USER
          value: "zabbix"
        - name: MYSQL_PASSWORD
          value: "zabbix"
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        ports:
        - containerPort: 3306

zabbix-server.yaml

apiVersion: v1
kind: Service
metadata:
  name: zabbix-server
spec:
  selector:
    app: zabbix-server
  ports:
    - port: 10051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zabbix-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zabbix-server
  template:
    metadata:
      labels:
        app: zabbix-server
    spec:
      containers:
      - name: zabbix-server
        image: zabbix/zabbix-server-mysql:alpine-latest
        env:
        - name: DB_SERVER_HOST
          value: "zabbix-db"
        - name: MYSQL_DATABASE
          value: "zabbix"
        - name: MYSQL_USER
          value: "zabbix"
        - name: MYSQL_PASSWORD
          value: "zabbix"
        - name: ZBX_SERVER_NAME
          value: "Zabbix-K8s"
        ports:
        - containerPort: 10051

zabbix-web.yaml

apiVersion: v1
kind: Service
metadata:
  name: zabbix-web
spec:
  selector:
    app: zabbix-web
  ports:
    - port: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zabbix-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zabbix-web
  template:
    metadata:
      labels:
        app: zabbix-web
    spec:
      containers:
      - name: zabbix-web
        image: zabbix/zabbix-web-nginx-mysql:alpine-latest
        env:
        - name: ZBX_SERVER_HOST
          value: "zabbix-server"
        - name: DB_SERVER_HOST
          value: "zabbix-db"
        - name: MYSQL_DATABASE
          value: "zabbix"
        - name: MYSQL_USER
          value: "zabbix"
        - name: MYSQL_PASSWORD
          value: "zabbix"
        - name: PHP_TZ
          value: "UTC"
        ports:
        - containerPort: 8080

üóìÔ∏è 3. Aplicar os recursos

kubectl apply -f zabbix-db.yaml
kubectl apply -f zabbix-server.yaml
kubectl apply -f zabbix-web.yaml

üö™ 4. Port-forward

kubectl port-forward svc/zabbix-web 8080:8080

Acesse: http://localhost:8080

Login: Admin | Senha: zabbix

üöÄ 5. Criar Alerta Sempre Ativo

Item

Configuration > Hosts > Zabbix server > Items > Create Item

Name: Uptime

Type: Zabbix internal

Key: zabbix[uptime]

Type of information: Numeric (unsigned)

Update interval: 30s

Add

Trigger

Triggers > Create trigger

Name: Alerta de Teste

Severity: Information

Expression:

{Zabbix server:zabbix[uptime].last()}>0

Add

üîé 6. Verificar Alerta

V√° para Monitoring > Problems

Aguarde alguns segundos e veja o alerta aparecer

Pronto! Ambiente simples para demonstra√ß√£o de alertas no Zabbix usando Kind.

